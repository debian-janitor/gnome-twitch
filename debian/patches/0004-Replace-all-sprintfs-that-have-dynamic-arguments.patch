From: Ippytraxx <ippytraxx@installgentoo.com>
Date: Thu, 14 Jul 2016 22:15:20 +0200
Subject: Replace all sprintfs that have dynamic arguments

Replace all calls to sprintf-like functions with safer alternatives to fix possible buffer overflows.
---
 TODO.org                          |  1 -
 src/gt-channels-container-child.c | 16 ++++++++--------
 src/gt-irc.c                      |  6 ++++--
 src/gt-twitch.c                   | 21 +++++++++++++--------
 4 files changed, 25 insertions(+), 19 deletions(-)

diff --git a/TODO.org b/TODO.org
index a55fbd2..19ea365 100644
--- a/TODO.org
+++ b/TODO.org
@@ -5,7 +5,6 @@
    - Not sure how much can be done from our side if it's a internal leak.
 ** DONE UI seems to randomly freeze when loading a stream sometimes.
 * Technical milestones
-** TODO Convert g_printf_strdup to g_sprintf with stack strings where applicable.
 ** TODO Add margin to channel and games containers. Use margin = 15.
 ** DONE Make functions in opening channel async.
 ** DONE Change buffer progress bar to spinner.
diff --git a/src/gt-channels-container-child.c b/src/gt-channels-container-child.c
index 7159a1c..30f9b63 100644
--- a/src/gt-channels-container-child.c
+++ b/src/gt-channels-container-child.c
@@ -92,19 +92,19 @@ viewers_converter(GBinding* bind,
                   gpointer udata)
 {
     gint64 viewers;
-    gchar label[20];
+    gchar* label = NULL;
 
     if (g_value_get_int64(from) > -1)
     {
         viewers = g_value_get_int64(from);
 
         if (viewers > 1e4)
-            g_sprintf(label, _("%3.1fk"), (gdouble) viewers / 1e3);
+            label = g_strdup_printf(_("%3.1fk"), (gdouble) viewers / 1e3);
         else
-            g_sprintf(label, _("%ld"), viewers);
+            label = g_strdup_printf(_("%ld"), viewers);
     }
 
-    g_value_set_string(to, label);
+    g_value_take_string(to, label);
 
     return TRUE;
 }
@@ -115,7 +115,7 @@ time_converter(GBinding* bind,
                GValue* to,
                gpointer udata)
 {
-    gchar label[100];
+    gchar* label = NULL;
     GDateTime* now_time;
     GDateTime* stream_started_time;
     GTimeSpan dif;
@@ -128,14 +128,14 @@ time_converter(GBinding* bind,
         dif = g_date_time_difference(now_time, stream_started_time);
 
         if (dif > G_TIME_SPAN_HOUR)
-            g_sprintf(label, _("%2.1fh"), (gdouble) dif / G_TIME_SPAN_HOUR);
+            label = g_strdup_printf(_("%2.1fh"), (gdouble) dif / G_TIME_SPAN_HOUR);
         else
-            g_sprintf(label, _("%ldm"), dif / G_TIME_SPAN_MINUTE);
+            label  = g_strdup_printf(_("%ldm"), dif / G_TIME_SPAN_MINUTE);
 
         g_date_time_unref(now_time);
     }
 
-    g_value_set_string(to, label);
+    g_value_take_string(to, label);
 
     return TRUE;
 }
diff --git a/src/gt-irc.c b/src/gt-irc.c
index a096179..a18a21b 100644
--- a/src/gt-irc.c
+++ b/src/gt-irc.c
@@ -192,15 +192,17 @@ static void
 send_cmd_printf(GOutputStream* ostream, const gchar* cmd, const gchar* format, ...)
 {
     va_list args;
-    gchar param[512];
+    gchar* param = NULL;
 
     va_start(args, format);
-    g_vsprintf(param, format, args);
+    param = g_strdup_vprintf(format, args);
     va_end(args);
 
     g_info("{GtIrc} Sending command '%s' with parameter '%s'", cmd, param);
 
     g_output_stream_printf(ostream, NULL, NULL, NULL, "%s %s%s", cmd, param, CR_LF);
+
+    g_free(param);
 }
 
 static gboolean
diff --git a/src/gt-twitch.c b/src/gt-twitch.c
index c9e563a..899c35c 100644
--- a/src/gt-twitch.c
+++ b/src/gt-twitch.c
@@ -344,9 +344,10 @@ gt_twitch_stream_access_token(GtTwitch* self, const gchar* channel)
     JsonNode* node;
     JsonReader* reader;
     GtTwitchStreamAccessToken* ret = NULL;
-    gchar uri[100];
+    gchar* uri = NULL;
+
+    uri = g_strdup_printf(ACCESS_TOKEN_URI, channel);
 
-    g_sprintf(uri, ACCESS_TOKEN_URI, channel);
     msg = soup_message_new("GET", uri);
 
     if (!send_message(self, msg))
@@ -374,6 +375,7 @@ gt_twitch_stream_access_token(GtTwitch* self, const gchar* channel)
     g_object_unref(reader);
     g_object_unref(parser);
 finish:
+    g_free(uri);
     g_object_unref(msg);
 
     return ret;
@@ -425,7 +427,7 @@ gt_twitch_all_streams(GtTwitch* self, const gchar* channel)
 {
     GtTwitchPrivate* priv = gt_twitch_get_instance_private(self);
     SoupMessage* msg;
-    gchar uri[500];
+    gchar* uri = NULL;
     GtTwitchStreamAccessToken* token;
     GList* ret = NULL;
 
@@ -433,7 +435,7 @@ gt_twitch_all_streams(GtTwitch* self, const gchar* channel)
 
     g_return_val_if_fail(token != NULL, NULL);
 
-    g_sprintf(uri, STREAM_PLAYLIST_URI, channel, token->token, token->sig, g_random_int_range(0, 999999));
+    uri = g_strdup_printf(STREAM_PLAYLIST_URI, channel, token->token, token->sig, g_random_int_range(0, 999999));
     msg = soup_message_new("GET", uri);
 
     if (!send_message(self, msg))
@@ -445,6 +447,7 @@ gt_twitch_all_streams(GtTwitch* self, const gchar* channel)
     ret = parse_playlist(msg->response_body->data);
 
 finish:
+    g_free(uri);
     g_object_unref(msg);
     gt_twitch_stream_access_token_free(token);
 
@@ -1200,7 +1203,7 @@ gt_chat_badges(GtTwitch* self, const gchar* chan)
 {
     GtTwitchPrivate* priv = gt_twitch_get_instance_private(self);
     SoupMessage* msg;
-    gchar uri[100];
+    gchar* uri = NULL;
     JsonParser* parser;
     JsonNode* node;
     JsonReader* reader;
@@ -1208,7 +1211,7 @@ gt_chat_badges(GtTwitch* self, const gchar* chan)
 
     g_info("{GtTwitch} Getting chat badges for channel '%s'", chan);
 
-    g_sprintf(uri, CHAT_BADGES_URI, chan);
+    uri = g_strdup_printf(CHAT_BADGES_URI, chan);
 
     msg = soup_message_new("GET", uri);
 
@@ -1274,6 +1277,7 @@ gt_chat_badges(GtTwitch* self, const gchar* chan)
     g_object_unref(reader);
 
 finish:
+    g_free(uri);
     g_object_unref(msg);
 
     return ret;
@@ -1346,7 +1350,7 @@ gt_twitch_channel_info(GtTwitch* self, const gchar* chan)
 {
     GtTwitchPrivate* priv = gt_twitch_get_instance_private(self);
     SoupMessage* msg;
-    gchar uri[100];
+    gchar* uri = NULL;
     JsonParser* parser;
     JsonNode* node;
     JsonReader* reader;
@@ -1354,7 +1358,7 @@ gt_twitch_channel_info(GtTwitch* self, const gchar* chan)
 
     g_info("{GtTwitch} Getting channel info for '%s'", chan);
 
-    g_sprintf(uri, CHANNEL_INFO_URI, chan);
+    uri = g_strdup_printf(CHANNEL_INFO_URI, chan);
 
     msg = soup_message_new("GET", uri);
 
@@ -1430,6 +1434,7 @@ gt_twitch_channel_info(GtTwitch* self, const gchar* chan)
     g_object_unref(reader);
 
 finish:
+    g_free(uri);
     g_object_unref(msg);
 
     return ret;
